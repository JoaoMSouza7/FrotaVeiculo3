// <auto-generated />
using System;
using FrotaPim.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FrotaPim.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("NomeCargo");

                    b.HasKey("Id");

                    b.ToTable("cargo");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano");

                    b.Property<string>("Combustivel");

                    b.Property<string>("Cor");

                    b.Property<string>("Marca");

                    b.Property<string>("Modelo");

                    b.Property<int?>("MotoristaId");

                    b.Property<string>("Placa");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId");

                    b.ToTable("carro");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.ContasAPagar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CentroDeCusto");

                    b.Property<string>("Descricao");

                    b.Property<string>("TipoDespesa");

                    b.Property<decimal>("Valor");

                    b.Property<DateTime>("Vencimento");

                    b.HasKey("Id");

                    b.ToTable("contasAPagar");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<int>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<string>("Estado");

                    b.Property<int>("Numero");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Estacionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarroId");

                    b.Property<string>("Descricao");

                    b.Property<string>("Local");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.ToTable("estacionamento");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEntrada");

                    b.Property<string>("Descricao");

                    b.Property<string>("Fornecedor");

                    b.Property<string>("NomePeca");

                    b.Property<int>("Quantidade");

                    b.Property<decimal>("ValorPeca");

                    b.HasKey("Id");

                    b.ToTable("estoque");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Manutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("DescricaoManutencao");

                    b.Property<decimal>("Valor");

                    b.Property<int?>("_CarroId");

                    b.HasKey("Id");

                    b.HasIndex("_CarroId");

                    b.ToTable("manutencao");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Multas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataMulta");

                    b.Property<string>("Gravidade");

                    b.Property<int?>("PessoaId");

                    b.Property<bool>("Status");

                    b.Property<decimal>("ValorMulta");

                    b.Property<int?>("_CarroId");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("_CarroId");

                    b.ToTable("multas");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Admissao");

                    b.Property<int>("CPF");

                    b.Property<int?>("CargoId");

                    b.Property<int?>("EnderecoId");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("pessoa");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apolice");

                    b.Property<DateTime>("DataContratacao");

                    b.Property<DateTime>("DataValidade");

                    b.Property<string>("Seguradora");

                    b.Property<bool>("Status");

                    b.Property<int?>("_CarroId");

                    b.HasKey("Id");

                    b.HasIndex("_CarroId");

                    b.ToTable("seguro");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Carro", b =>
                {
                    b.HasOne("FrotaPim.Domain.Entidades.Pessoa", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaId");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Estacionamento", b =>
                {
                    b.HasOne("FrotaPim.Domain.Entidades.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Manutencao", b =>
                {
                    b.HasOne("FrotaPim.Domain.Entidades.Carro", "_Carro")
                        .WithMany()
                        .HasForeignKey("_CarroId");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Multas", b =>
                {
                    b.HasOne("FrotaPim.Domain.Entidades.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.HasOne("FrotaPim.Domain.Entidades.Carro", "_Carro")
                        .WithMany()
                        .HasForeignKey("_CarroId");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Pessoa", b =>
                {
                    b.HasOne("FrotaPim.Domain.Entidades.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("FrotaPim.Domain.Entidades.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("FrotaPim.Domain.Entidades.Seguro", b =>
                {
                    b.HasOne("FrotaPim.Domain.Entidades.Carro", "_Carro")
                        .WithMany()
                        .HasForeignKey("_CarroId");
                });
#pragma warning restore 612, 618
        }
    }
}
